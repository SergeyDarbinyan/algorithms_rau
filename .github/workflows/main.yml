name: Build & Deploy Algorithms RAU

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install python packages
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

#      - name: Run unit tests
#        run: |
#          pytest -v --capture=no homework6/test_hom1.py --maxfail=1 --disable-warnings

      - name: Run tests for modified files
        run: |
          echo "Checking for modified files..."
          files_changed=$(git diff --name-only HEAD^ HEAD)
          echo "Files changed: $files_changed"
          
          for file in $files_changed; do
            if [[ $file == homework6/* ]]; then
              pytest -v --capture=no homework6/test_hom1.py --maxfail=1 --disable-warnings
            fi
            if [[ $file == homework5/* ]]; then
              pytest -v --capture=no homework5/test_hom1.py --maxfail=1 --disable-warnings
            fi
          done    

#      - name: Check for changes in homework folders
#        id: check-changes
#        run: |
#          modified_homeworks=""
#
#          git fetch origin main
#
#          files_changed=$(git diff --name-only origin/main HEAD)
#
#          echo "Files changed in the current commit: $files_changed"
#
#          for i in {1..9}; do
#            echo "Checking for changes in homework$i..."
#
#            if echo "$files_changed" | grep -q "^homework$i/"; then
#              modified_homeworks="$modified_homeworks homework$i"
#            fi
#          done
#
#          echo "Modified homework folders: $modified_homeworks"
#
#          echo "modified_homeworks=$modified_homeworks" >> $GITHUB_ENV
#
#      - name: Run tests for modified homework folders
#        run: |
#          for homework in ${{ env.modified_homeworks }}; do
#            echo "Running tests for $homework..."
#            cd $homework
#            pytest test_hom1.py --maxfail=1 --disable-warnings
#          done
